<?xml version="1.0" encoding="utf-8"?>
<testsuite package="org.spotbugs" time="0" tests="1" errors="1" name="findbugs">
<testcase time="0" name="assignmentone/ArrayAlgorithms.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 8-75 
Random object created and used only once in shuffle(int[]) 
Random object created and used only once 
This code creates a java.util.Random object, uses it to generate one random 
  number, and then discards the Random object. This produces mediocre 
  quality random numbers and is inefficient. If possible, rewrite the code 
  so that the Random object is created once and saved, and each time a new 
  random number is required invoke a method on the existing Random object 
  to obtain it. 
 
If it is important that the generated Random numbers not be guessable, you 
  must not create a new Random for each random number; the values are too 
  easily guessable. You should strongly consider using a 
  java.security.SecureRandom instead (and avoid allocating a new 
  SecureRandom for each random number needed).
----------------
]]></failure>
</testcase></testsuite>